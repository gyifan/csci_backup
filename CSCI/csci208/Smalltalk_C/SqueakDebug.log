Error: Please close this to abort file opening16 February 2012 5:59:19.034 pmVM: unix - SmalltalkImage: Squeak4.1 [latest update: #9957]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir /nfs/unixspace/linux/accounts/student/y/ygg001/csci208/Smalltalk_CTrusted Dir /nfs/unixspace/linux/accounts/student/y/ygg001/csci208/Smalltalk_C/secureUntrusted Dir /nfs/unixspace/linux/accounts/student/y/ygg001/csci208/Smalltalk_C/My SqueakMultiByteFileStream class(Object)>>error:	Receiver: MultiByteFileStream	Arguments and temporary variables: 		aString: 	'Please close this to abort file opening'	Receiver's instance variables: 		superclass: 	StandardFileStream		methodDict: 	a MethodDictionary(#accepts:->(MultiByteFileStream>>#accepts: "a Co...etc...		format: 	152		instanceVariables: 	#('converter' 'lineEndConvention' 'wantsLineEndConversion')		organization: 	('accessing' ascii binary converter converter: fileInEncodingName...etc...		subclasses: 	nil		name: 	#MultiByteFileStream		classPool: 	a Dictionary(#Cr->Character cr #CrLf->'
' #Lf->Character lf #LineEn...etc...		sharedPools: 	nil		environment: 	Smalltalk globals "a SystemDictionary with lots of globals"		category: 	#'Multilingual-TextConversion'MultiByteFileStream class(StandardFileStream class)>>fileExistsUserHandling:	Receiver: MultiByteFileStream	Arguments and temporary variables: 		fullFileName: 	'/nfs/unixspace/linux/accounts/student/y/ygg001/csci208/Smalltalk...etc...		dir: 	UnixFileDirectory on '/nfs/unixspace/linux/accounts/student/y/ygg001/csci2...etc...		localName: 	'LabC.st'		choice: 	0		newName: 	nil		newFullFileName: 	nil	Receiver's instance variables: 		superclass: 	StandardFileStream		methodDict: 	a MethodDictionary(#accepts:->(MultiByteFileStream>>#accepts: "a Co...etc...		format: 	152		instanceVariables: 	#('converter' 'lineEndConvention' 'wantsLineEndConversion')		organization: 	('accessing' ascii binary converter converter: fileInEncodingName...etc...		subclasses: 	nil		name: 	#MultiByteFileStream		classPool: 	a Dictionary(#Cr->Character cr #CrLf->'
' #Lf->Character lf #LineEn...etc...		sharedPools: 	nil		environment: 	Smalltalk globals "a SystemDictionary with lots of globals"		category: 	#'Multilingual-TextConversion'FileExistsException>>defaultAction	Receiver: FileExistsException: '/nfs/unixspace/linux/accounts/student/y/ygg001/csci208/Smalltalk_C/L...etc...	Arguments and temporary variables: 	Receiver's instance variables: 		messageText: 	nil		tag: 	nil		signalContext: 	FileExistsException(Exception)>>signal		handlerContext: 	BlockClosure>>on:do:		outerContext: 	nil		fileName: 	'/nfs/unixspace/linux/accounts/student/y/ygg001/csci208/Smalltalk_C/L...etc...		fileClass: 	MultiByteFileStreamUndefinedObject>>handleSignal:	Receiver: nil	Arguments and temporary variables: 		exception: 	FileExistsException: '/nfs/unixspace/linux/accounts/student/y/ygg001...etc...	Receiver's instance variables: nil--- The full stack ---MultiByteFileStream class(Object)>>error:MultiByteFileStream class(StandardFileStream class)>>fileExistsUserHandling:FileExistsException>>defaultActionUndefinedObject>>handleSignal: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -FileExistsException(Exception)>>pass[] in PasteUpMorph>>becomeActiveDuring:BlockClosure>>valueWithPossibleArgs:[] in MethodContext(ContextPart)>>handleSignal:BlockClosure>>ensure:MethodContext(ContextPart)>>handleSignal:FileExistsException(Exception)>>signalMultiByteFileStream class(StandardFileStream class)>>newFileNamed:FileStream class>>newFileNamed:FileStream class>>writeSourceCodeFrom:baseName:isSt:useHtml:SystemOrganizer>>fileOutCategory:asHtml:SystemOrganizer>>fileOutCategory:Browser>>fileOutSystemCategoryBrowser(StringHolder)>>perform:orSendTo:[] in MenuItemMorph>>invokeWithEvent:BlockClosure>>ensure:CursorWithMask(Cursor)>>showWhile:MenuItemMorph>>invokeWithEvent:MenuItemMorph>>mouseUp:MenuItemMorph>>handleMouseUp:MouseButtonEvent>>sentTo:MenuItemMorph(Morph)>>handleEvent:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:MenuItemMorph(Morph)>>processEvent:using:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:MenuMorph(Morph)>>processEvent:using:MenuMorph(Morph)>>processEvent:MenuMorph>>handleFocusEvent:[] in HandMorph>>sendFocusEvent:to:clear:[] in PasteUpMorph>>becomeActiveDuring:...etc...