<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_24) on Sat Mar 19 19:47:17 EDT 2011 -->
<TITLE>
IMaze
</TITLE>

<META NAME="date" CONTENT="2011-03-19">

<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="IMaze";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/IMaze.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="IRobot.html" title="interface in &lt;Unnamed&gt;"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="index.html?IMaze.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="IMaze.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
Interface IMaze</H2>
<DL>
<DT><B>All Known Implementing Classes:</B> <DD><A HREF="Maze.html" title="class in &lt;Unnamed&gt;">Maze</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public interface <B>IMaze</B></DL>
</PRE>

<P>
A maze interface for use with the MazeVizualizer GUI. The Maze class must
 implement this interface.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>sm053, lwittie</DD>
</DL>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="IMaze.html#getFilename()">getFilename</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the name of the file from which the maze was constructed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="IMaze.html#getNumCols()">getNumCols</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of columns found in the maze.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="IMaze.html#getNumRows()">getNumRows</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of rows found in the maze.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Point</CODE></FONT></TD>
<TD><CODE><B><A HREF="IMaze.html#getStartingPoint()">getStartingPoint</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the location of the maze's entrance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="IMaze.html#isExit(int, int)">isExit</A></B>(int&nbsp;x,
       int&nbsp;y)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines whether the provided coordinates are an exit in the maze or
 not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="IMaze.html#isWall(int, int)">isWall</A></B>(int&nbsp;x,
       int&nbsp;y)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines whether the provided coordinates are a wall in the maze or
 not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="IMaze.html#recordVisitation(java.awt.Point)">recordVisitation</A></B>(java.awt.Point&nbsp;location)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increments the visitation record at the given location by one.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="IMaze.html#resetVisited()">resetVisited</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reset all hallways to be unvisited.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="IMaze.html#visited(int, int)">visited</A></B>(int&nbsp;x,
        int&nbsp;y)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Count how many times the provided coordinates are a hallway that has been
 visited.</TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getNumCols()"><!-- --></A><H3>
getNumCols</H3>
<PRE>
int <B>getNumCols</B>()</PRE>
<DL>
<DD>Returns the number of columns found in the maze.
 <P>
 Called by MazePanel methods
<P>
<DD><DL>

<DT><B>Returns:</B><DD>number of columns</DL>
</DD>
</DL>
<HR>

<A NAME="getNumRows()"><!-- --></A><H3>
getNumRows</H3>
<PRE>
int <B>getNumRows</B>()</PRE>
<DL>
<DD>Returns the number of rows found in the maze.
 <P>
 Called by MazePanel methods
<P>
<DD><DL>

<DT><B>Returns:</B><DD>number of rows</DL>
</DD>
</DL>
<HR>

<A NAME="getFilename()"><!-- --></A><H3>
getFilename</H3>
<PRE>
java.lang.String <B>getFilename</B>()</PRE>
<DL>
<DD>Returns the name of the file from which the maze was constructed.
 <P>
 Called by MazeVisualizer methods
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the maze's filename</DL>
</DD>
</DL>
<HR>

<A NAME="getStartingPoint()"><!-- --></A><H3>
getStartingPoint</H3>
<PRE>
java.awt.Point <B>getStartingPoint</B>()</PRE>
<DL>
<DD>Returns the location of the maze's entrance.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the location of the maze's entrance.</DL>
</DD>
</DL>
<HR>

<A NAME="isWall(int, int)"><!-- --></A><H3>
isWall</H3>
<PRE>
boolean <B>isWall</B>(int&nbsp;x,
               int&nbsp;y)</PRE>
<DL>
<DD>Determines whether the provided coordinates are a wall in the maze or
 not. The x coordinate determines the column (starting at 0 on the left),
 while the y coordinate determines the row (starting at 0 on the top).
 <P>
 Called by MazePanel methods
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>x</CODE> - the column<DD><CODE>y</CODE> - the row
<DT><B>Returns:</B><DD>whether the coordinates indicate a wall</DL>
</DD>
</DL>
<HR>

<A NAME="isExit(int, int)"><!-- --></A><H3>
isExit</H3>
<PRE>
boolean <B>isExit</B>(int&nbsp;x,
               int&nbsp;y)</PRE>
<DL>
<DD>Determines whether the provided coordinates are an exit in the maze or
 not. The x coordinate determines the column (starting at 0 on the left),
 while the y coordinate determines the row (starting at 0 on the top).
 <P>
 Called by MazePanel methods
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>x</CODE> - the column<DD><CODE>y</CODE> - the row
<DT><B>Returns:</B><DD>whether the coordinates indicate a maze exit</DL>
</DD>
</DL>
<HR>

<A NAME="visited(int, int)"><!-- --></A><H3>
visited</H3>
<PRE>
int <B>visited</B>(int&nbsp;x,
            int&nbsp;y)</PRE>
<DL>
<DD>Count how many times the provided coordinates are a hallway that has been
 visited. The x coordinate determines the column (starting at 0 on the
 left), while the y coordinate determines the row (starting at 0 on the
 top).
 <P>
 Called by MazePanel methods
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>x</CODE> - the column<DD><CODE>y</CODE> - the row
<DT><B>Returns:</B><DD>how many times the coordinates indicated have been visited</DL>
</DD>
</DL>
<HR>

<A NAME="resetVisited()"><!-- --></A><H3>
resetVisited</H3>
<PRE>
void <B>resetVisited</B>()</PRE>
<DL>
<DD>Reset all hallways to be unvisited.
 <P>
 Called by MazeVisualizer methods
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="recordVisitation(java.awt.Point)"><!-- --></A><H3>
recordVisitation</H3>
<PRE>
void <B>recordVisitation</B>(java.awt.Point&nbsp;location)</PRE>
<DL>
<DD>Increments the visitation record at the given location by one.
 
 Called by Robot class and its subclasses.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>location</CODE> - the desired location</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/IMaze.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="IRobot.html" title="interface in &lt;Unnamed&gt;"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="index.html?IMaze.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="IMaze.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
