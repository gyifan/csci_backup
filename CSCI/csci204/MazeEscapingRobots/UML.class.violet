<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.6.0_22" class="java.beans.XMLDecoder"> 
 <object class="com.horstmann.violet.ClassDiagramGraph"> 
  <void method="addNode"> 
   <object id="ClassNode0" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>-maze : IMaze
-robot : IRobot
...more
</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+setMaze(m : IMaze) : void
+setRobot(r : IRobot) : void
+paint(g : Graphics) : void
...more</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>MazePanel</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>78.0</double> 
     <double>351.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode1" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>-maze : IMaze
-robot : IRobot
...more</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+main(args : String[]) : void {static}
+actionPerformed(e : ActionEvent) : void
-resetMaze() : void
-makeRobot(className : String) : void
-step() : void
-play() : void
-stop(finished : boolean) : void
-end() : void
...more</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>MazeVizualizer</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>37.0</double> 
     <double>115.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode2" class="com.horstmann.violet.ClassNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>+constructor(msg : String) : RobotEscapeException
+getMessage() : String
</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>RobotEscapeException</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>7.0</double> 
     <double>9.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode0" class="com.horstmann.violet.InterfaceNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>+getMoveCount() : void
+getLocation() : Point
+getDirection() : Mark
+enter(m : IMaze) : void
+runToEnd() : void
+step() : void</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>«IRobot»</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>486.0</double> 
     <double>154.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode1" class="com.horstmann.violet.InterfaceNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>+getNumCols() : void
+getNumRows() : void
+getFilename() : String
+getStratingPoint() : Point
+isWall(col : int, row : int) : boolean
+isExit(col : int, row : int) : boolean
+visited(col : int, row : int) : int
+resetVisited() : void</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>«IMaze»</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>447.0</double> 
     <double>340.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object class="com.horstmann.violet.NoteNode"> 
    <void property="text"> 
     <void property="text"> 
      <string>Add all of the classes you write to this
UML. Add in all of the lines they need.
You are not responsible for the contents 
of the UML boxes I provided. </string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>380.0</double> 
     <double>30.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode3" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>-maze: char[]
-mazeFile: File
-visitCounters: int[][]
-startingPoint: Point</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+getNumCols() : int
+getNumRows() : int
+getFilename() : String
+getStratingPoint() : Point
+isWall(col : int, row : int) : boolean
+isExit(col : int, row : int) : boolean
+visited(col : int, row : int) : int
+resetVisited() : void
+recordVisitation(position: Point): void
+toString(): String</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Maze</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>748.0</double> 
     <double>428.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode4" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>-MAX_MOVE: int {static final}
+moveCounter: int
+location: Point
+direction: Mark
+nextLocation: Point
+nextDirection: Mark
+rightPoint: Point
+leftPoint: Point
+frontPoint: Point
+backPoint: Point
+maze: IMaze</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+getMoveCount() : int
+getLocation() : Point
+getDirection() : Mark
+enter(m : IMaze) : void
+runToEnd() : void
+step() : void
+getDirectionLeftOf(m: Mark): Mark
+getDirectionLRightOf(m: Mark): Mark
+getPointInFrontOf(p: Point, m: Mark): Point
+getPointInBackOf(p: Point, m: Mark): Point
+calculateNext(): void {abstract}
</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Robot</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>736.0</double> 
     <double>27.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode5" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>-isOnWall: boolean</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+calculateNext(): void</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>RightHandRobot</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1078.0</double> 
     <double>93.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode6" class="com.horstmann.violet.ClassNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>calculateNext(): void</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>RandomRobot</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1077.0</double> 
     <double>12.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode7" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>-FRONT: int {static final}
-RIGHT: int {static final}
-LEFT: int {static final}
-BACK: int {static final}
-WALL: int {static final}
-neighborVisitCounts: int[]</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+calculateNext(): void
-updateNeighbors(): void
-calculateLowestCounts(): int
-getNextDirection(position: int): Mark</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>MemoryRobot</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1077.0</double> 
     <double>166.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode8" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>-FRONT: int {static final}
-RIGHT: int {static final}
-LEFT: int {static final}
-BACK: int {static final}
-WALL: int {static final}
-TELEPORTABILITY: int {static final}
-neighborVisitCounts: int[]</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>+calculateNext(): void
-updateNeighbors(): void
-calculateLowestCounts(): int
-getNextDirection(position: int): Mark
-teleport(): void
-getTeleportPoint(): Point</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>NinjaRobot</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1083.0</double> 
     <double>369.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="ClassNode1"/> 
   <object idref="ClassNode2"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode1"/> 
   <object idref="ClassNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode1"/> 
   <object idref="InterfaceNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode1"/> 
   <object idref="InterfaceNode1"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode0"/> 
   <object idref="InterfaceNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode0"/> 
   <object idref="InterfaceNode1"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="ClassNode3"/> 
   <object idref="InterfaceNode1"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="ClassNode4"/> 
   <object idref="InterfaceNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="ClassNode7"/> 
   <object idref="ClassNode4"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="ClassNode6"/> 
   <object idref="ClassNode4"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="ClassNode5"/> 
   <object idref="ClassNode4"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="ClassNode8"/> 
   <object idref="ClassNode4"/> 
  </void> 
 </object> 
</java> 
