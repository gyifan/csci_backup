/**
 * CSCI 204, Yifan Ge, Kevin Thomas, Davis Gallinghouse
 * Assignment MazeEscapingRobots
 * Created: Mar 1, 2011, 12:40:28 AM
 */

/**
 * This class is a NinjaRobot that inherits from the abstract Robot class. It
 * has all the same instance data and methods as every other Robot. It
 * implements the abstract method <code>calculateNext()</code> based on choosing
 * the least visited path and teleporting itself 4 steps forward every 20
 * steps.If the 4th block is a wall, Ninja robot will remove the wall.
 * 
 * @author Yifan Ge
 * @author Kevin Thomas
 * @author Davis Gallinghouse
 * 
 */
public class NinjaRobot extends Robot {

	/** Integer representation for the front neighbor */
	private static final int FRONT = 0;

	/** Integer representation for the right neighbor */
	private static final int RIGHT = 1;

	/** Integer representation for the left neighbor */
	private static final int LEFT = 2;

	/** Integer representation for the back neighbor */
	private static final int BACK = 3;

	/** Default visit count value for walls */
	private static final int WALL = 100;

	/*
	 * (non-Javadoc)
	 * 
	 * @see Robot#calculateNext()
	 */
	@Override
	public void calculateNext() {

	}

}
