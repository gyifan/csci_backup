<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_22) on Tue Feb 15 20:58:07 EST 2011 -->
<TITLE>
GameOfLifeBoard
</TITLE>

<META NAME="date" CONTENT="2011-02-15">

<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="GameOfLifeBoard";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/GameOfLifeBoard.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="GameOfLife.html" title="class in &lt;Unnamed&gt;"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="GameOfLifeCell.html" title="class in &lt;Unnamed&gt;"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="index.html?GameOfLifeBoard.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="GameOfLifeBoard.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
Class GameOfLifeBoard</H2>
<PRE>
java.lang.Object
  <IMG SRC="./resources/inherit.gif" ALT="extended by "><B>GameOfLifeBoard</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>GameOfLifeBoard</B><DT>extends java.lang.Object<DT>implements <A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></DL>
</PRE>

<P>
The <code>GameOfLifeBoard</code> class contains methods that directly control
 the state of cells in the board. These methods are called by the GameOfLife
 class.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Michael Davis, Yifan Ge</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="Cell.html" title="interface in &lt;Unnamed&gt;">Cell</A>[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#cells">cells</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A 2-D array of cells that correspond to each space of the board.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="GameOfLifeBoard.html#GameOfLifeBoard(int, java.util.ArrayList, java.util.ArrayList)">GameOfLifeBoard</A></B>(int&nbsp;boardSize,
                java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;birthConditions,
                java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;stayAliveConditions)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a GameOfLifeBoard with a 2D array of cells defined by the
 supplied board size.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#addHorizontalGridLine(int)">addHorizontalGridLine</A></B>(int&nbsp;numOfCell)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds one horizontal line for the grid of the game board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#changeState(int, int)">changeState</A></B>(int&nbsp;x,
            int&nbsp;y)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Calls the changeState method of GameOfLifeCell.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="Cell.html" title="interface in &lt;Unnamed&gt;">Cell</A>[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#getNeighbors(int, int)">getNeighbors</A></B>(int&nbsp;x,
             int&nbsp;y)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a 2D array of cells touching the cell defined by parameters x and
 y on the board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#getSize()">getSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of cells per side of the board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#getStartValue(int)">getStartValue</A></B>(int&nbsp;coordinate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes the start value of a loop used to find the neighbors of a target
 cell.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#getStopValue(int)">getStopValue</A></B>(int&nbsp;coordinate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes the stop value of a loop used to find the neighbors of a target
 cell.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#isAlive(int, int)">isAlive</A></B>(int&nbsp;x,
        int&nbsp;y)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether the targeted cell, defined by x and y, is alive or dead.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#setBirthConditions(java.util.ArrayList)">setBirthConditions</A></B>(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;conditions)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Declares the conditions for which a cell will be born.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#setStayAliveConditions(java.util.ArrayList)">setStayAliveConditions</A></B>(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;conditions)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Declares the conditions for which a cell will stay alive.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#toArray()">toArray</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a 2D-array of boolean values representing the current state of
 every cell on the board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an ASCII representation of the board's current state.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#undo()">undo</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reverts all cells on the board to their previous states.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="GameOfLifeBoard.html#update()">update</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines the next state for every cell on the board and changes the
 state of the appropriate cells.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="cells"><!-- --></A><H3>
cells</H3>
<PRE>
private <A HREF="Cell.html" title="interface in &lt;Unnamed&gt;">Cell</A>[][] <B>cells</B></PRE>
<DL>
<DD>A 2-D array of cells that correspond to each space of the board.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="GameOfLifeBoard(int, java.util.ArrayList, java.util.ArrayList)"><!-- --></A><H3>
GameOfLifeBoard</H3>
<PRE>
public <B>GameOfLifeBoard</B>(int&nbsp;boardSize,
                       java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;birthConditions,
                       java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;stayAliveConditions)</PRE>
<DL>
<DD>Constructs a GameOfLifeBoard with a 2D array of cells defined by the
 supplied board size. This method will be called by GameOfLife in the
 '.setBoardSize()' method.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>boardSize</CODE> - number of cells per side of the square board</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="changeState(int, int)"><!-- --></A><H3>
changeState</H3>
<PRE>
public void <B>changeState</B>(int&nbsp;x,
                        int&nbsp;y)</PRE>
<DL>
<DD>Calls the changeState method of GameOfLifeCell. This will toggle the
 current state of the target cell, meaning if the cell is alive, it will
 die, or if it is dead it will come to life. Supplied coordinates must be
 within the boundaries of the board.
 
 This method is called in the GameOfLife class.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="TwoDBoard.html#changeState(int, int)">changeState</A></CODE> in interface <CODE><A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>x</CODE> - x-coordinate of the cell to be changed<DD><CODE>y</CODE> - y-coordinate of the cell to be changed</DL>
</DD>
</DL>
<HR>

<A NAME="getSize()"><!-- --></A><H3>
getSize</H3>
<PRE>
public int <B>getSize</B>()</PRE>
<DL>
<DD>Returns the number of cells per side of the board. This method is called
 by the GameOfLifeClass.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="TwoDBoard.html#getSize()">getSize</A></CODE> in interface <CODE><A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>number of cells per side of board</DL>
</DD>
</DL>
<HR>

<A NAME="isAlive(int, int)"><!-- --></A><H3>
isAlive</H3>
<PRE>
public boolean <B>isAlive</B>(int&nbsp;x,
                       int&nbsp;y)</PRE>
<DL>
<DD>Returns whether the targeted cell, defined by x and y, is alive or dead.
 The supplied parameters must be within the boundaries of the board. This
 method will call the isAlive() method of the GameOfLifeCell class. This
 method is called by the GameOfLife class.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="TwoDBoard.html#isAlive(int, int)">isAlive</A></CODE> in interface <CODE><A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>x</CODE> - x-coordinate of the target cell<DD><CODE>y</CODE> - y-coordinate of the target cell
<DT><B>Returns:</B><DD>will return true if the target cell is alive, false if the cell
         is dead</DL>
</DD>
</DL>
<HR>

<A NAME="setBirthConditions(java.util.ArrayList)"><!-- --></A><H3>
setBirthConditions</H3>
<PRE>
public void <B>setBirthConditions</B>(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;conditions)</PRE>
<DL>
<DD>Declares the conditions for which a cell will be born.
 
 The GameOfLife calls this method.
 
 This calls the GameOfLifeCell setBirthConditions method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="TwoDBoard.html#setBirthConditions(java.util.ArrayList)">setBirthConditions</A></CODE> in interface <CODE><A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>conditions</CODE> - an ArrayList of numbers representing the number of neighbors
            for which a cell will be born</DL>
</DD>
</DL>
<HR>

<A NAME="setStayAliveConditions(java.util.ArrayList)"><!-- --></A><H3>
setStayAliveConditions</H3>
<PRE>
public void <B>setStayAliveConditions</B>(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;conditions)</PRE>
<DL>
<DD>Declares the conditions for which a cell will stay alive.
 
 The GameOfLife calls this method.
 
 This calls the GameOfLifeCell setStayAliveCondtiions method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="TwoDBoard.html#setStayAliveConditions(java.util.ArrayList)">setStayAliveConditions</A></CODE> in interface <CODE><A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>conditions</CODE> - an ArrayList of numbers representing the number of neighbors
            for which a cell will stay alive</DL>
</DD>
</DL>
<HR>

<A NAME="toArray()"><!-- --></A><H3>
toArray</H3>
<PRE>
public boolean[][] <B>toArray</B>()</PRE>
<DL>
<DD>Returns a 2D-array of boolean values representing the current state of
 every cell on the board. A true element in the array represents a living
 cell, a false element represents a dead cell. This method uses the
 GameOfLifeCell isAlive() method. The GameOfLife class calls this method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="TwoDBoard.html#toArray()">toArray</A></CODE> in interface <CODE><A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>boolean representation of the game board</DL>
</DD>
</DL>
<HR>

<A NAME="undo()"><!-- --></A><H3>
undo</H3>
<PRE>
public void <B>undo</B>()</PRE>
<DL>
<DD>Reverts all cells on the board to their previous states.
 
 This method is called by the GameOfLife class and calls the undo method
 in GameOfLifeCell.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="TwoDBoard.html#undo()">undo</A></CODE> in interface <CODE><A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="update()"><!-- --></A><H3>
update</H3>
<PRE>
public void <B>update</B>()</PRE>
<DL>
<DD>Determines the next state for every cell on the board and changes the
 state of the appropriate cells. This method is called by the GameOfLife
 class.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="TwoDBoard.html#update()">update</A></CODE> in interface <CODE><A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD>Returns an ASCII representation of the board's current state. ASCII means
 a String that can be printed at the console and looks like the board with
 some characters representing live cell and dead cells (X and O or * and a
 space). The ASCII drawing will also need characters to represent the grid
 that the cells are in (_ and |). The GameOfLife calls this method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="TwoDBoard.html#toString()">toString</A></CODE> in interface <CODE><A HREF="TwoDBoard.html" title="interface in &lt;Unnamed&gt;">TwoDBoard</A></CODE><DT><B>Overrides:</B><DD><CODE>toString</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>an ASCII representation of the board</DL>
</DD>
</DL>
<HR>

<A NAME="getNeighbors(int, int)"><!-- --></A><H3>
getNeighbors</H3>
<PRE>
private <A HREF="Cell.html" title="interface in &lt;Unnamed&gt;">Cell</A>[][] <B>getNeighbors</B>(int&nbsp;x,
                              int&nbsp;y)</PRE>
<DL>
<DD>Returns a 2D array of cells touching the cell defined by parameters x and
 y on the board. This method is meant to supply the parameter for
 '.setNeighbors()' in a class that implements the cell interface.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>x</CODE> - x-coordinate of cell being examined. Must be within the bounds
            of the board.<DD><CODE>y</CODE> - y-coordinate of cell being examined. Must be within the bounds
            of the board.
<DT><B>Returns:</B><DD>two dimensional array of Cell objects that are touching the cell
         defined by x and y.</DL>
</DD>
</DL>
<HR>

<A NAME="getStartValue(int)"><!-- --></A><H3>
getStartValue</H3>
<PRE>
private int <B>getStartValue</B>(int&nbsp;coordinate)</PRE>
<DL>
<DD>Computes the start value of a loop used to find the neighbors of a target
 cell. This method should only be called from within the private
 getNeighbors() method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>coordinate</CODE> - x or y coordinate of target cell
<DT><B>Returns:</B><DD>starting value of the loop</DL>
</DD>
</DL>
<HR>

<A NAME="getStopValue(int)"><!-- --></A><H3>
getStopValue</H3>
<PRE>
private int <B>getStopValue</B>(int&nbsp;coordinate)</PRE>
<DL>
<DD>Computes the stop value of a loop used to find the neighbors of a target
 cell. This method should only be called from within the private
 getNeighbors() method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>coordinate</CODE> - x or y coordinate of target cell
<DT><B>Returns:</B><DD>stopping value of the loop</DL>
</DD>
</DL>
<HR>

<A NAME="addHorizontalGridLine(int)"><!-- --></A><H3>
addHorizontalGridLine</H3>
<PRE>
private java.lang.String <B>addHorizontalGridLine</B>(int&nbsp;numOfCell)</PRE>
<DL>
<DD>Adds one horizontal line for the grid of the game board.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>numOfCell</CODE> - the number of cells in each horizontal line.
<DT><B>Returns:</B><DD>a line with the length according to the number of the cells.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/GameOfLifeBoard.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="GameOfLife.html" title="class in &lt;Unnamed&gt;"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="GameOfLifeCell.html" title="class in &lt;Unnamed&gt;"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="index.html?GameOfLifeBoard.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="GameOfLifeBoard.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
